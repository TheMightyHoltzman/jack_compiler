function Screen.init 0
push constant 0
pop static 0
push constant 0
return
function Screen.setColor 0
push argument 0
pop static 0
push constant 0
return
function Screen.drawPixel 3
push constant 32
push argument 0
call Math.multiply 2
push argument 1
push constant 16
call Math.divide 2
add
pop local 0
push constant 16384
push local 0
add
call Memory.peek 1
pop local 1
push constant 15
push argument 0
and
pop local 2
push static 0
not
if-goto Screen.flow.0
push local 2
call Math.getTwoToThe 1
push local 1
or
pop local 1
goto Screen.flow.1
label Screen.flow.0
label Screen.flow.1
push local 0
push local 1
call Memory.poke 2
push constant 0
return
function Screen.drawLine 5
push argument 2
push argument 0
lt
not
if-goto Screen.flow.2
push argument 2
push argument 0
add
pop argument 2
push argument 2
push argument 0
sub
pop argument 0
push argument 2
push argument 0
sub
pop argument 2
push argument 3
push argument 1
add
pop argument 3
push argument 3
push argument 1
sub
pop argument 1
push argument 3
push argument 1
sub
pop argument 3
label Screen.flow.2
push argument 2
push argument 0
sub
pop local 0
push argument 3
push argument 1
sub
pop local 1
push constant 0
pop local 2
push constant 0
pop local 3
push constant 0
pop local 4
push local 1
push constant 0
eq
not
if-goto Screen.flow.3
label Screen.flow.5
push local 2
push local 0
eq
not
not
if-goto Screen.flow.6
push argument 0
push local 2
add
push argument 1
call Screen.drawPixel 2
push local 2
push constant 1
add
pop local 2
goto Screen.flow.5
label Screen.flow.6
goto Screen.flow.4
label Screen.flow.3
label Screen.flow.4
push constant 0
return
function Screen.drawCircle 1
push argument 2
neg
pop local 0
label Screen.flow.7
push local 0
push constant 1
sub
push argument 2
lt
not
if-goto Screen.flow.8
push argument 0
push argument 2
push argument 2
call Math.multiply 2
push local 0
push local 0
call Math.multiply 2
sub
call Math.sqrt 1
sub
push argument 1
push local 0
add
push argument 0
push argument 2
push argument 2
call Math.multiply 2
push local 0
push local 0
call Math.multiply 2
sub
call Math.sqrt 1
add
push argument 1
push local 0
add
call Screen.drawLine 4
push local 0
push constant 1
add
pop local 0
goto Screen.flow.7
label Screen.flow.8
push constant 0
return
function Screen.drawRectangle 2
push argument 3
push argument 1
sub
pop local 0
label Screen.flow.9
push local 0
push constant 1
neg
gt
not
if-goto Screen.flow.10
push argument 0
push argument 1
push local 0
add
push argument 2
push argument 3
push local 0
add
call Screen.drawLine 4
push local 0
push constant 1
sub
pop local 0
goto Screen.flow.9
label Screen.flow.10
push constant 0
return
function Screen.clearScreen 2
push constant 0
pop local 0
push constant 100
pop local 1
label Screen.flow.11
push local 0
push constant 1
sub
push local 1
lt
not
if-goto Screen.flow.12
push constant 16384
push local 0
add
push constant 0
call Memory.poke 2
push local 0
push constant 1
add
pop local 0
goto Screen.flow.11
label Screen.flow.12
push constant 0
return
