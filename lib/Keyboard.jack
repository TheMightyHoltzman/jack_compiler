// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

	static char c;

    /** Initializes the keyboard. */
    function void init() {
    }

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
    	var char keyCode;
    	let keyCode = Memory.peek(24576);
    	return keyCode;
    }

    /**
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character
     * of the pressed key.
     */
    function char readChar() {
    	while (Keyboard.keyPressed() = 0) {
    		// do nothing
    	}
    	let c = Keyboard.keyPressed();
    	while (~(Keyboard.keyPressed() = 0)) {
    		// do nothing
    	}
    	Output.printChar(c);
    }

    /**
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
    	var String s;
    	var char c;
      var boolean continue;

    	let continue = true;
    	let s = String.new(100);

    	while(continue) {
    		let c = readChar();
    		s.appendChar(c);
    		if (c = String.newLine()) {
    			Output.printLn();
    			continue = false;
    		}
    		else {
    			if (c = String.backSpace()) {
    				s.eraseLastChar();
    				do Output.backSpace();
    			}
    			else {
    				let s = s.appendChar(c);
    			}
    		}
    	}
    	return s;
    }

    /**
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces.
     */
    function int readInt(String message) {
    	var int nr;
    	var int  keyPressed;
    	var boolean continue;
    	let continue = true;
    	let nr = 0;

    	while (continue) {
    		let keyPressed = Keyboard.keyPressed();
    		if ((keyPressed > 47) & (keyPressed < 58)) {
    			let nr = nr * 10;
				let keyPressed = keyPressed - 48;
				let nr = nr + KeyPressed;
    		}
    		else {
    			if (keyPressed = String.newLine()) {
    				Output.printLn();
    				continue = false;
    			}
    			else {
    				if (keyPressed = String.backSpace()) {
    					let nr = nr / 10;
    					do Output.backSpace();
    				}
    				else {
    					// do nothing - invalid entry
    				}
    			}

    		}
    	}
    	return nr;
    }
}
